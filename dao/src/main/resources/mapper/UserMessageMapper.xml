<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.dao.UserMessageMapper" >
  <resultMap id="BaseResultMap" type="com.demo.entity.UserMessage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="taskid" property="taskid" jdbcType="VARCHAR" />
    <result column="from_userid" property="fromUserid" jdbcType="VARCHAR" />
    <result column="to_userid" property="toUserid" jdbcType="VARCHAR" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="isread" property="isread" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, taskid, from_userid, to_userid, message, create_time, isread
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.demo.entity.UserMessage" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user_message (taskid, from_userid, to_userid, 
      message, create_time, isread
      )
    values (#{taskid,jdbcType=VARCHAR}, #{fromUserid,jdbcType=VARCHAR}, #{toUserid,jdbcType=VARCHAR}, 
      #{message,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{isread,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.demo.entity.UserMessage" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskid != null" >
        taskid,
      </if>
      <if test="fromUserid != null" >
        from_userid,
      </if>
      <if test="toUserid != null" >
        to_userid,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isread != null" >
        isread,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskid != null" >
        #{taskid,jdbcType=VARCHAR},
      </if>
      <if test="fromUserid != null" >
        #{fromUserid,jdbcType=VARCHAR},
      </if>
      <if test="toUserid != null" >
        #{toUserid,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isread != null" >
        #{isread,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.entity.UserMessage" >
    update t_user_message
    <set >
      <if test="taskid != null" >
        taskid = #{taskid,jdbcType=VARCHAR},
      </if>
      <if test="fromUserid != null" >
        from_userid = #{fromUserid,jdbcType=VARCHAR},
      </if>
      <if test="toUserid != null" >
        to_userid = #{toUserid,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isread != null" >
        isread = #{isread,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.entity.UserMessage" >
    update t_user_message
    set taskid = #{taskid,jdbcType=VARCHAR},
      from_userid = #{fromUserid,jdbcType=VARCHAR},
      to_userid = #{toUserid,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      isread = #{isread,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>